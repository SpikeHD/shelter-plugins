(()=>{var N=Object.create;var c=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var B=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),I=(e,n)=>{for(var o in n)c(e,o,{get:n[o],enumerable:!0})},_=(e,n,o,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of W(n))!R.call(e,i)&&i!==o&&c(e,i,{get:()=>n[i],enumerable:!(t=A(n,i))||t.enumerable});return e};var $=(e,n,o)=>(o=e!=null?N(F(e)):{},_(n||!e||!e.__esModule?c(o,"default",{value:e,enumerable:!0}):o,e)),D=e=>_(c({},"__esModule",{value:!0}),e);var a=(e,n,o)=>new Promise((t,i)=>{var T=s=>{try{m(o.next(s))}catch(f){i(f)}},U=s=>{try{m(o.throw(s))}catch(f){i(f)}},m=s=>s.done?t(s.value):Promise.resolve(s.value).then(T,U);m((o=o.apply(e,n)).next())});var h=B((z,g)=>{g.exports=shelter.solidWeb});var P={};I(P,{onUnload:()=>q});var l=$(h(),1);var k={name:"Dorion",invoke:(e,n)=>window.__TAURI__.invoke(e,n),event:{emit:(e,n)=>window.__TAURI__.event.emit(e,n),listen:(e,n)=>a(void 0,null,function*(){return window.__TAURI__.event.listen(e,n)})},app:{getVersion:()=>window.__TAURI__.app.getVersion(),getName:()=>window.__TAURI__.app.getName()},process:{relaunch:()=>window.__TAURI__.process.relaunch()},apiWindow:{appWindow:{setFullscreen:e=>window.__TAURI__.window.appWindow.setFullscreen(e)}}};var b={name:"Flooed",invoke:()=>a(void 0,null,function*(){}),event:{emit:()=>{},listen:()=>a(void 0,null,function*(){})},app:{getVersion:()=>"0.0.0",getName:()=>"None"},process:{relaunch:()=>{}},apiWindow:{appWindow:{setFullscreen:()=>{}}}};var x={name:"Unknown",invoke:()=>a(void 0,null,function*(){}),event:{emit:()=>{},listen:()=>a(void 0,null,function*(){})},app:{getVersion:()=>"0.0.0",getName:()=>"None"},process:{relaunch:()=>{}},apiWindow:{appWindow:{setFullscreen:()=>{}}}};var p="None";window.Dorion?p="Dorion":window.Flooed&&(p="Flooed");var r;switch(p){case"Dorion":r=k;break;case"Flooed":r=b;break;default:r=x;break}var ee=window[p];var d=r.name,u=r.invoke,v=r.event,ne=r.app,C=r.process,oe=r.apiWindow;var{ui:{openModal:w,ModalRoot:M,ModalHeader:G,ModalBody:S,ModalConfirmFooter:V}}=shelter,y=e=>(0,l.createComponent)(M,{get children(){return[(0,l.createComponent)(G,{get close(){return e.onCancel},get children(){return e.header}}),(0,l.createComponent)(S,{get children(){return e.body}}),(0,l.createComponent)(V,{get onConfirm(){return e.onConfirm},get onCancel(){return e.onCancel},get confirmText(){return e.confirmText},get cancelText(){return e.cancelText},get type(){return e.type}})]}}),O=()=>a(void 0,null,function*(){console.log("[Updater] Checking for updates...");let e=JSON.parse(yield u("read_config_file")),n=yield u("update_check"),o=()=>{u("do_update",{toUpdate:n})};if(console.log(`[Updater] ${d} things to update: ${n}`),!(e.update_notify!==void 0&&!e.update_notify)){if(n.includes("dorion")){if(e.autoupdate){w(t=>y({header:`${d} Update`,body:`A ${d} update has been fetched, and ${d} will restart momentarily.`,confirmText:"Got it!",type:"neutral",onConfirm:()=>o(),onCancel:t.close})),o();return}w(t=>y({header:"Updates Available!",body:`There are ${d} updates available. Would you like to apply them? This notification can be disabled in ${d} Settings`,confirmText:"Yes please!",cancelText:"Nope!",type:"neutral",onConfirm:()=>o(),onCancel:t.close}))}v.once("update_complete",()=>{w(t=>y({header:"Update Complete!",body:"The update has been applied! Please restart to apply the changes.",confirmText:"Okay!",type:"neutral",onConfirm:()=>C.relaunch(),onCancel:t.close}))})}}),q=()=>{};O();return D(P);})();
