(()=>{var D=Object.create;var d=Object.defineProperty,G=Object.defineProperties,V=Object.getOwnPropertyDescriptor,J=Object.getOwnPropertyDescriptors,L=Object.getOwnPropertyNames,S=Object.getOwnPropertySymbols,M=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var v=(e,n,t)=>n in e?d(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,w=(e,n)=>{for(var t in n||={})I.call(n,t)&&v(e,t,n[t]);if(S)for(var t of S(n))P.call(n,t)&&v(e,t,n[t]);return e},g=(e,n)=>G(e,J(n));var j=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),q=(e,n)=>{for(var t in n)d(e,t,{get:n[t],enumerable:!0})},T=(e,n,t,c)=>{if(n&&typeof n=="object"||typeof n=="function")for(let o of L(n))!I.call(e,o)&&o!==t&&d(e,o,{get:()=>n[o],enumerable:!(c=V(n,o))||c.enumerable});return e};var H=(e,n,t)=>(t=e!=null?D(M(e)):{},T(n||!e||!e.__esModule?d(t,"default",{value:e,enumerable:!0}):t,e)),z=e=>T(d({},"__esModule",{value:!0}),e);var i=(e,n,t)=>new Promise((c,o)=>{var B=s=>{try{u(t.next(s))}catch(_){o(_)}},W=s=>{try{u(t.throw(s))}catch(_){o(_)}},u=s=>s.done?c(s.value):Promise.resolve(s.value).then(B,W);u((t=t.apply(e,n)).next())});var A=j((oe,x)=>{x.exports=shelter.solidWeb});var ne={};q(ne,{onLoad:()=>Z,onUnload:()=>ee});var h=H(A(),1);var E={invoke:(e,n)=>window.__TAURI__.invoke(e,n),event:{emit:(e,n)=>window.__TAURI__.event.emit(e,n),listen:(e,n)=>i(void 0,null,function*(){return window.__TAURI__.event.listen(e,n)})},app:{getVersion:()=>window.__TAURI__.app.getVersion(),getName:()=>window.__TAURI__.app.getName()},process:{relaunch:()=>window.__TAURI__.process.relaunch()},apiWindow:{appWindow:{setFullscreen:e=>window.__TAURI__.window.appWindow.setFullscreen(e)}}};var R={invoke:()=>i(void 0,null,function*(){}),event:{emit:()=>{},listen:()=>i(void 0,null,function*(){})},app:{getVersion:()=>"0.0.0",getName:()=>"None"},process:{relaunch:()=>{}},apiWindow:{appWindow:{setFullscreen:()=>{}}}};var C={invoke:()=>i(void 0,null,function*(){}),event:{emit:()=>{},listen:()=>i(void 0,null,function*(){})},app:{getVersion:()=>"0.0.0",getName:()=>"None"},process:{relaunch:()=>{}},apiWindow:{appWindow:{setFullscreen:()=>{}}}};var b="Dorion";window.Flooed&&(b="Flooed");var a;switch(b){case"Dorion":a=E;break;case"Flooed":a=R;break;default:a=C;break}var m=window[b];var l=a.invoke,ue=a.event,_e=a.app,we=a.process,ge=a.apiWindow;var{ui:{SwitchItem:O},flux:{dispatcher:f},solid:{createSignal:$},observeDom:K,patcher:Q}=shelter,[r,k]=$(null),X='div[class*="contentColumn"] div[class*="container"]',Y=Q.instead("Notification",window,()=>{}),p=null,y=!1,N=!1,U=e=>i(void 0,null,function*(){if(e.section!=="Notifications"){y=!1,N=!1;return}else if(y)return;y=!0,p=K(X,n=>{p.now(),n.style.display="none";let t=n.nextElementSibling;if(t&&(t.style.display="none"),N)return;let c=[(0,h.createComponent)(O,{note:"Shows a red badge on the app icon when you have unread messages.",get value(){var o;return(o=r())==null?void 0:o.unread_badge},onChange:o=>i(void 0,null,function*(){k(g(w({},r()),{unread_badge:o})),yield l("write_config_file",{contents:JSON.stringify(r())}),m.shouldShowUnreadBadge=o,o?m.util.applyNotificationCount():l("notif_count",{amount:0})}),children:"Enable Unread Message Badge"}),(0,h.createComponent)(O,{note:"If you're looking for per-channel or per-server notifications, right-click the desired server icon and select Notification Settings.",get value(){var o;return(o=r())==null?void 0:o.desktop_notifications},onChange:o=>i(void 0,null,function*(){k(g(w({},r()),{desktop_notifications:o})),yield l("write_config_file",{contents:JSON.stringify(r())})}),children:"Enable Desktop Notifications"})];for(let o of c)n.parentElement.prepend(o);N=!0})}),F=e=>{r().desktop_notifications&&l("send_notification",{title:e.title,body:e.body,icon:e.icon})};f.subscribe("USER_SETTINGS_MODAL_SET_SECTION",U);f.subscribe("RPC_NOTIFICATION_CREATE",F);var Z=()=>i(void 0,null,function*(){k(JSON.parse(yield l("read_config_file")))}),ee=()=>{p==null||p.now(),f.unsubscribe("USER_SETTINGS_MODAL_SET_SECTION",U),f.unsubscribe("RPC_NOTIFICATION_CREATE",F),Y()};return z(ne);})();
